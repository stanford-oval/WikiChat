{"document_title":"Lecture 10","section_title":"Week 4, Day 1","content":"Yes, 100 XP. Uh, I note that it is weak. What is it weak for? And there's about half of you in the lecture hall that have been in the past. Um, I'm not that surprised. I mean, I get it. People are, uh, are, uh, busy this time of year, and it, uh, as the quarter goes on, you tend to get busier and busier, um, especially towards midterm season, which is coming up. And, uh, I get it. Um, I also understand that a number of you need to every so often go to a different section because something comes up. You've got some one off, uh, thing that comes up. Um, and instead of, uh, emailing Jonathan who gets like, a thousand emails a day, um, instead of doing that, we created a little site. Here is the link. You can go back in the video and watch this or just type do it right now, which is, uh, web. Does anybody do classes wanted to be CGI in one off dash section. And what it allows you to do is, uh, put a little reason why you need to, uh, go to a different section, like, um, I was sick for my section earlier in the week.","last_edit_date":"2024-10-14T00:00:00","url":"https://web.stanford.edu/class/archive/cs/cs106b/cs106b.1252/lectures/10-fractals/","num_tokens":0,"block_metadata":{"start_time":131000,"end_time":203000.0, "speaker": "John Doe", "week":4}}
{"document_title":"Lecture 15","section_title":"Week 5, Day 3","content":"So. Second. Yeah. To listen to. Uh oh. I forgot to update the title side. All right. Welcome, everyone. All right. Um. We are all done. Going to grab a different set of slides. Ju. Ju ju. All right. Thank you for your patience. The class before us didn't get out until, um, just about a minute before we needed to start. So we are running a little bit late. Um, yeah. Okay. So. All right. So, um, today we are going to continue our topics that we started earlier this week. We are talking about memory and pointers. There's a lot more to know about dynamic memory and heap allocator and pointers, and how the heap and stack work together than what we did. Um, on Wednesday, in fact, uh, weeks and weeks and weeks of CSE 107 are dedicated to that topic. Even further detail than we'll get into in this class. Um, but we do have more to do in this class. So, um. Reminder. Hope everyone knows my now. Our midterm is on Tuesday. Um, everyone should have rooms set up. If you don't reach out to Jonathan immediately. Um, it takes quite a lot of work to work with.","last_edit_date":"2024-10-27T00:00:00","url":"https://web.stanford.edu/class/archive/cs/cs106b/cs106b.1252/lectures/15-pointers/","num_tokens":0,"block_metadata":{"start_time":21000.0,"end_time":425000.0, "speaker": "John Doe", "week":5}}
{"document_title":"Lecture 15","section_title":"Week 5, Day 3","content":"It's only for deleting arrays. And so we just put the just delete and then the variable name. However. When this delete is called on path two. Because path two is an object, its destructor member function will be called. What will happen in that destructor member function is it will call delete on this array, and that delete will use the square brackets. Right. So we go back to look at our stack. It's the stack and not the queue. But remember our um destructor. So this destructor will be um kind of implicitly called for us when we call delete um on that queue pointer. And so it will perform a second delete. To clear out these um, that elements array and return that to use. So that is why um when we call delete, not only did um this storage box that has the size and capacity go away but also, ah be returned back to other people, but also um, the elements array, they both are cleaned up. No memory leaks. Good times. Okay. So, um, another thing that's nice to do. So, like, right after we call delete, the thing looks like this, where path two is still set to the memory address.","last_edit_date":"2024-10-27T00:00:00","url":"https://web.stanford.edu/class/archive/cs/cs106b/cs106b.1252/lectures/15-pointers/","num_tokens":0,"block_metadata":{"start_time":2823000.0,"end_time":2924000.0, "speaker": "Jane Smith", "week": 5}}